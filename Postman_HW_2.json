{
	"info": {
		"_postman_id": "8c348433-f36c-4d91-9b46-8aa737a22b75",
		"name": "Group_33_HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23956572"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"\r",
							"//7. Спарсить request\r",
							"var req = request.data;\r",
							"var req_name = req.name;\r",
							"\r",
							"console.log(\"resp_name = \" + resp_name)\r",
							"console.log(\"req_name = \" + req_name)\r",
							"\r",
							"//4. Проверить, что name в ответе равно name с request (name вбить руками.)\r",
							"pm.test(\"req_resp_name(manually)_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Rustam\");\r",
							"});\r",
							"\r",
							"//8. Проверить, что name в ответе равно name с request (name забрать из request.)\r",
							"pm.test(\"req_resp_name_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"var resp_age = +jsonData.age;\r",
							"var req_age = +req.age;\r",
							"\r",
							"console.log(\"resp_age = \" + resp_age)\r",
							"console.log(\"req_age = \" + req_age)\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"req_resp_age(manually)_check\", function () {\r",
							"    pm.expect(resp_age).to.eql(26);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"req_resp_age_check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"var resp_salary = jsonData.salary;\r",
							"var req_salary = +req.salary;\r",
							"\r",
							"console.log(\"resp_salary = \" + resp_salary)\r",
							"console.log(\"req_salary = \" + req_salary)\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"req_resp_salary(manually)_check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(1200);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"req_resp_salary_check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"var resp_json = pm.response.json();\r",
							"var resp_u_family = resp_json.family;\r",
							"console.log(\"Family: \", resp_u_family)\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"var resp_u_salary_1_5_year = resp_json.family.u_salary_1_5_year;\r",
							"pm.test(\"req_resp_salary_x4_check\", function () {\r",
							"    pm.expect(resp_u_salary_1_5_year).to.eql(req_salary * 4);\r",
							"});\r",
							"\r",
							"console.log(resp_u_salary_1_5_year)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Rustam",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1200",
							"type": "text"
						},
						{
							"key": "age",
							"value": "26",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"var resp_age = jsonData.age;\r",
							"var resp_salary = jsonData.salary;\r",
							"\r",
							"// 4. Спарсить request. (Данные из url)\r",
							"var req_u = pm.request.url.query.toObject();\r",
							"var req_name = req_u.name;\r",
							"var req_age = req_u.age;\r",
							"var req_salary = +req_u.salary;\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"req_resp_name_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"req_resp_age_check\", function() {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"req_resp_age_check\", function() {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"var resp_u_family = jsonData.family;\r",
							"console.log(\"Family: \", resp_u_family)\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"var resp_dog_params = [jsonData.family.pets.dog];\r",
							"pm.test(\"dog_name_params_check\", function() {\r",
							"    resp_dog_params.includes(\"name\");\r",
							"});\r",
							"\r",
							"var resp_dog = jsonData.family.pets.dog;\r",
							"console.log(\"dog: \", resp_dog);\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"dog_age_params_check\", function() {\r",
							"    resp_dog_params.includes(\"age\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"var resp_dog_name = resp_dog.name;\r",
							"pm.test(\"dog_name_value_check\", function() {\r",
							"    pm.expect(resp_dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"console.log(\"dog_name: \", resp_dog_name);\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"var resp_dog_age = resp_dog.age;\r",
							"pm.test(\"dog_age_value_check\", function() {\r",
							"    pm.expect(resp_dog_age).to.eql(4);\r",
							"});\r",
							"\r",
							"console.log(\"dog_age: \", resp_dog_age);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Rustam&salary=1200&age=26",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Rustam"
						},
						{
							"key": "salary",
							"value": "1200"
						},
						{
							"key": "age",
							"value": "26"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?age=26&salary=1200&name=Rustam",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "1200"
						},
						{
							"key": "name",
							"value": "Rustam"
						}
					]
				}
			},
			"response": []
		}
	]
}